//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class CommunicationServiceMessage: Codable, Equatable {
  public var data: String?
  public var endDate: Date?
  public var extId: String?
  public var failureReason: String?
  public var from: String?
  public var fromCaption: String?
  public var id: String?
  public var requestedSentAt: Date?
  public var sentAt: Date?
  public var startDate: Date?
  public var subject: String?
  public var templateId: String?
  public var to: String?
  public var toCaption: String?

  public init(data: String?  = nil, endDate: Date? = nil, extId: String?  = nil, failureReason: String?  = nil, from: String?  = nil, fromCaption: String?  = nil, id: String? = nil, requestedSentAt: Date? = nil, sentAt: Date? = nil, startDate: Date? = nil, subject: String?  = nil, templateId: String? = nil, to: String?  = nil, toCaption: String?  = nil) {
    self.data = data
    self.endDate = endDate
    self.extId = extId
    self.failureReason = failureReason
    self.from = from
    self.fromCaption = fromCaption
    self.id = id
    self.requestedSentAt = requestedSentAt
    self.sentAt = sentAt
    self.startDate = startDate
    self.subject = subject
    self.templateId = templateId
    self.to = to
    self.toCaption = toCaption
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? CommunicationServiceMessage else { return false }
    guard self.data == object.data else { return false }
    guard self.endDate == object.endDate else { return false }
    guard self.extId == object.extId else { return false }
    guard self.failureReason == object.failureReason else { return false }
    guard self.from == object.from else { return false }
    guard self.fromCaption == object.fromCaption else { return false }
    guard self.id == object.id else { return false }
    guard self.requestedSentAt == object.requestedSentAt else { return false }
    guard self.sentAt == object.sentAt else { return false }
    guard self.startDate == object.startDate else { return false }
    guard self.subject == object.subject else { return false }
    guard self.templateId == object.templateId else { return false }
    guard self.to == object.to else { return false }
    guard self.toCaption == object.toCaption else { return false }
    return true
  }

  public static func == (lhs: CommunicationServiceMessage, rhs: CommunicationServiceMessage) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
