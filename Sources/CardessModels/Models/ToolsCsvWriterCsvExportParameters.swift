//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class ToolsCsvWriterCsvExportParameters: Codable, Equatable {
  public var delimiter: String?
  public var entityName: String?
  public var excludeSubentities: Bool?
  public var fieldNames: [KeyValuePairlessThanStringStringgreaterThan]?
  public var filter: String?
  public var newLine: String?
  public var page: Int?
  public var pageSize: Int?
  public var skipSort: Bool?
  public var sortAscending: Bool?
  public var sortField: String?
  public var useQuotes: Bool?
  public var withHeader: Bool?

  public init(delimiter: String?  = nil, entityName: String?  = nil, excludeSubentities: Bool?  = nil, fieldNames: [KeyValuePairlessThanStringStringgreaterThan]?  = nil, filter: String?  = nil, newLine: String?  = nil, page: Int?  = nil, pageSize: Int?  = nil, skipSort: Bool?  = nil, sortAscending: Bool?  = nil, sortField: String?  = nil, useQuotes: Bool?  = nil, withHeader: Bool?  = nil) {
    self.delimiter = delimiter
    self.entityName = entityName
    self.excludeSubentities = excludeSubentities
    self.fieldNames = fieldNames
    self.filter = filter
    self.newLine = newLine
    self.page = page
    self.pageSize = pageSize
    self.skipSort = skipSort
    self.sortAscending = sortAscending
    self.sortField = sortField
    self.useQuotes = useQuotes
    self.withHeader = withHeader
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? ToolsCsvWriterCsvExportParameters else { return false }
    guard self.delimiter == object.delimiter else { return false }
    guard self.entityName == object.entityName else { return false }
    guard self.excludeSubentities == object.excludeSubentities else { return false }
    guard self.fieldNames == object.fieldNames else { return false }
    guard self.filter == object.filter else { return false }
    guard self.newLine == object.newLine else { return false }
    guard self.page == object.page else { return false }
    guard self.pageSize == object.pageSize else { return false }
    guard self.skipSort == object.skipSort else { return false }
    guard self.sortAscending == object.sortAscending else { return false }
    guard self.sortField == object.sortField else { return false }
    guard self.useQuotes == object.useQuotes else { return false }
    guard self.withHeader == object.withHeader else { return false }
    return true
  }

  public static func == (lhs: ToolsCsvWriterCsvExportParameters, rhs: ToolsCsvWriterCsvExportParameters) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
