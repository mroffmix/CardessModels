//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class CommunicationTradeInValuatedVehicle: Codable, Equatable {
  public var constructionDate: Int?
  public var container: String?
  public var countryCode: String?
  public var datECode: String?
  public var equipmentCodes: [String]?
  public var forecastMonths: [Int]?
  public var hsnTsn: String?
  public var languageCode: String?
  public var licenseNumber: String?
  public var mileage: Int?
  public var mileagePerYear: Int?
  public var registrationDate: Int?
  public var type: CommunicationTradeInValuationType?
  public var valuation: CommunicationTradeInValuation?
  public var vehicleTypeId: String?
  public var vehicleTypeName: String?
  public var vin: String?

  public init(constructionDate: Int?  = nil, container: String?  = nil, countryCode: String?  = nil, datECode: String?  = nil, equipmentCodes: [String]?  = nil, forecastMonths: [Int]?  = nil, hsnTsn: String?  = nil, languageCode: String?  = nil, licenseNumber: String?  = nil, mileage: Int?  = nil, mileagePerYear: Int?  = nil, registrationDate: Int?  = nil, type: CommunicationTradeInValuationType?  = nil, valuation: CommunicationTradeInValuation?  = nil, vehicleTypeId: String?  = nil, vehicleTypeName: String?  = nil, vin: String?  = nil) {
    self.constructionDate = constructionDate
    self.container = container
    self.countryCode = countryCode
    self.datECode = datECode
    self.equipmentCodes = equipmentCodes
    self.forecastMonths = forecastMonths
    self.hsnTsn = hsnTsn
    self.languageCode = languageCode
    self.licenseNumber = licenseNumber
    self.mileage = mileage
    self.mileagePerYear = mileagePerYear
    self.registrationDate = registrationDate
    self.type = type
    self.valuation = valuation
    self.vehicleTypeId = vehicleTypeId
    self.vehicleTypeName = vehicleTypeName
    self.vin = vin
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? CommunicationTradeInValuatedVehicle else { return false }
    guard self.constructionDate == object.constructionDate else { return false }
    guard self.container == object.container else { return false }
    guard self.countryCode == object.countryCode else { return false }
    guard self.datECode == object.datECode else { return false }
    guard self.equipmentCodes == object.equipmentCodes else { return false }
    guard self.forecastMonths == object.forecastMonths else { return false }
    guard self.hsnTsn == object.hsnTsn else { return false }
    guard self.languageCode == object.languageCode else { return false }
    guard self.licenseNumber == object.licenseNumber else { return false }
    guard self.mileage == object.mileage else { return false }
    guard self.mileagePerYear == object.mileagePerYear else { return false }
    guard self.registrationDate == object.registrationDate else { return false }
    guard self.type == object.type else { return false }
    guard self.valuation == object.valuation else { return false }
    guard self.vehicleTypeId == object.vehicleTypeId else { return false }
    guard self.vehicleTypeName == object.vehicleTypeName else { return false }
    guard self.vin == object.vin else { return false }
    return true
  }

  public static func == (lhs: CommunicationTradeInValuatedVehicle, rhs: CommunicationTradeInValuatedVehicle) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
