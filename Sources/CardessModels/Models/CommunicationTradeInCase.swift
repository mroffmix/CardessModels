//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class CommunicationTradeInCase: Codable, Equatable {
  public var assessmentId: String?
  public var attachments: CommunicationTradeInCaseAttachments?
  public var caseLead: CommunicationTradeInCaseLeadSimple?
  public var caseMargins: CommunicationTradeInCaseMargins?
  public var caseVehicle: CommunicationTradeInCaseVehicleSimple?
  public var caseVehicleRemarks: CommunicationTradeInCaseVehicleRemarks?
  public var contactRequestMessage: String?
  public var contextKey: String?
  public var createdOn: Date?
  public var customerNote: String?
  public var customerPrices: CommunicationTradeInCustomerPrices?
  public var dealerCaseNumber: String?
  public var dealerNote: String?
  public var dueDate: Date?
  public var evaluationWeights: CommunicationTradeInEvaluationWeight?
  public var externalReferenceNumber: String?
  public var id: String?
  public var leasingContract: CommunicationTradeInLeasingContract?
  public var locationId: String?
  public var notificationEmails: [String]?
  public var origin: String?
  public var rentalContract: CommunicationTradeInRentalContract?
  public var requestedReexportAt: Date?
  public var rscCaseId: String?
  public var sourceType: CommunicationTradeInCaseSourceType?
  public var status: CommunicationTradeInCaseStatus?
  public var statusHistory: [CommunicationTradeInCaseStatusHistory]?
  public var telekomNotes: String?

  public init(assessmentId: String?  = nil, attachments: CommunicationTradeInCaseAttachments?  = nil, caseLead: CommunicationTradeInCaseLeadSimple?  = nil, caseMargins: CommunicationTradeInCaseMargins?  = nil, caseVehicle: CommunicationTradeInCaseVehicleSimple?  = nil, caseVehicleRemarks: CommunicationTradeInCaseVehicleRemarks?  = nil, contactRequestMessage: String?  = nil, contextKey: String?  = nil, createdOn: Date? = nil, customerNote: String?  = nil, customerPrices: CommunicationTradeInCustomerPrices?  = nil, dealerCaseNumber: String?  = nil, dealerNote: String?  = nil, dueDate: Date? = nil, evaluationWeights: CommunicationTradeInEvaluationWeight?  = nil, externalReferenceNumber: String?  = nil, id: String?  = nil, leasingContract: CommunicationTradeInLeasingContract?  = nil, locationId: String?  = nil, notificationEmails: [String]?  = nil, origin: String?  = nil, rentalContract: CommunicationTradeInRentalContract?  = nil, requestedReexportAt: Date? = nil, rscCaseId: String?  = nil, sourceType: CommunicationTradeInCaseSourceType?  = nil, status: CommunicationTradeInCaseStatus?  = nil, statusHistory: [CommunicationTradeInCaseStatusHistory]?  = nil, telekomNotes: String?  = nil) {
    self.assessmentId = assessmentId
    self.attachments = attachments
    self.caseLead = caseLead
    self.caseMargins = caseMargins
    self.caseVehicle = caseVehicle
    self.caseVehicleRemarks = caseVehicleRemarks
    self.contactRequestMessage = contactRequestMessage
    self.contextKey = contextKey
    self.createdOn = createdOn
    self.customerNote = customerNote
    self.customerPrices = customerPrices
    self.dealerCaseNumber = dealerCaseNumber
    self.dealerNote = dealerNote
    self.dueDate = dueDate
    self.evaluationWeights = evaluationWeights
    self.externalReferenceNumber = externalReferenceNumber
    self.id = id
    self.leasingContract = leasingContract
    self.locationId = locationId
    self.notificationEmails = notificationEmails
    self.origin = origin
    self.rentalContract = rentalContract
    self.requestedReexportAt = requestedReexportAt
    self.rscCaseId = rscCaseId
    self.sourceType = sourceType
    self.status = status
    self.statusHistory = statusHistory
    self.telekomNotes = telekomNotes
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? CommunicationTradeInCase else { return false }
    guard self.assessmentId == object.assessmentId else { return false }
    guard self.attachments == object.attachments else { return false }
    guard self.caseLead == object.caseLead else { return false }
    guard self.caseMargins == object.caseMargins else { return false }
    guard self.caseVehicle == object.caseVehicle else { return false }
    guard self.caseVehicleRemarks == object.caseVehicleRemarks else { return false }
    guard self.contactRequestMessage == object.contactRequestMessage else { return false }
    guard self.contextKey == object.contextKey else { return false }
    guard self.createdOn == object.createdOn else { return false }
    guard self.customerNote == object.customerNote else { return false }
    guard self.customerPrices == object.customerPrices else { return false }
    guard self.dealerCaseNumber == object.dealerCaseNumber else { return false }
    guard self.dealerNote == object.dealerNote else { return false }
    guard self.dueDate == object.dueDate else { return false }
    guard self.evaluationWeights == object.evaluationWeights else { return false }
    guard self.externalReferenceNumber == object.externalReferenceNumber else { return false }
    guard self.id == object.id else { return false }
    guard self.leasingContract == object.leasingContract else { return false }
    guard self.locationId == object.locationId else { return false }
    guard self.notificationEmails == object.notificationEmails else { return false }
    guard self.origin == object.origin else { return false }
    guard self.rentalContract == object.rentalContract else { return false }
    guard self.requestedReexportAt == object.requestedReexportAt else { return false }
    guard self.rscCaseId == object.rscCaseId else { return false }
    guard self.sourceType == object.sourceType else { return false }
    guard self.status == object.status else { return false }
    guard self.statusHistory == object.statusHistory else { return false }
    guard self.telekomNotes == object.telekomNotes else { return false }
    return true
  }

  public static func == (lhs: CommunicationTradeInCase, rhs: CommunicationTradeInCase) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
