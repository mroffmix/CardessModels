//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class CommunicationTradeInCustomerPrices: Codable, Equatable {
  public var expectationPrice: CommunicationTradeInMonetaryValue?
  public var finalPrice: CommunicationTradeInMonetaryValue?
  public var originalEquipmentPrice: CommunicationTradeInMonetaryValue?
  public var originalVehiclePrice: CommunicationTradeInMonetaryValue?
  public var otherReasonForDeviation: String?
  public var reasonForDeviation: CommunicationTradeInReasonForDeviation?

  public init(expectationPrice: CommunicationTradeInMonetaryValue?  = nil, finalPrice: CommunicationTradeInMonetaryValue?  = nil, originalEquipmentPrice: CommunicationTradeInMonetaryValue?  = nil, originalVehiclePrice: CommunicationTradeInMonetaryValue?  = nil, otherReasonForDeviation: String?  = nil, reasonForDeviation: CommunicationTradeInReasonForDeviation?  = nil) {
    self.expectationPrice = expectationPrice
    self.finalPrice = finalPrice
    self.originalEquipmentPrice = originalEquipmentPrice
    self.originalVehiclePrice = originalVehiclePrice
    self.otherReasonForDeviation = otherReasonForDeviation
    self.reasonForDeviation = reasonForDeviation
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? CommunicationTradeInCustomerPrices else { return false }
    guard self.expectationPrice == object.expectationPrice else { return false }
    guard self.finalPrice == object.finalPrice else { return false }
    guard self.originalEquipmentPrice == object.originalEquipmentPrice else { return false }
    guard self.originalVehiclePrice == object.originalVehiclePrice else { return false }
    guard self.otherReasonForDeviation == object.otherReasonForDeviation else { return false }
    guard self.reasonForDeviation == object.reasonForDeviation else { return false }
    return true
  }

  public static func == (lhs: CommunicationTradeInCustomerPrices, rhs: CommunicationTradeInCustomerPrices) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
