//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class VehicleDataCalculationRuleInfo: Codable, Equatable {
  public var additionalServices: [VehicleDataAdditionalServiceInfo]?
  public var corporate: Double?
  public var createdOn: Date?
  public var deactivated: Bool?
  public var deactivatedAt: Date?
  public var deactivatedBy: String?
  public var dealerLocationId: String?
  public var `default`: Bool?
  public var description: String?
  public var id: String?
  public var modifiedOn: Date?
  public var name: String?
  public var oemCode: String?
  public var period: Int?
  public var `private`: Double?
  public var ruleTags: [MasterDataTagInfo]?
  public var ruleType: VehicleDataEnumsCalculationRuleType?
  public var vehicleStatus: VehicleDataEnumsCalculationRuleVehicleStatus?

  public init(additionalServices: [VehicleDataAdditionalServiceInfo]?  = nil, corporate: Double?  = nil, createdOn: Date? = nil, deactivated: Bool?  = nil, deactivatedAt: Date? = nil, deactivatedBy: String? = nil, dealerLocationId: String?  = nil, `default`: Bool?  = nil, description: String?  = nil, id: String? = nil, modifiedOn: Date? = nil, name: String?  = nil, oemCode: String?  = nil, period: Int?  = nil, `private`: Double?  = nil, ruleTags: [MasterDataTagInfo]?  = nil, ruleType: VehicleDataEnumsCalculationRuleType?  = nil, vehicleStatus: VehicleDataEnumsCalculationRuleVehicleStatus?  = nil) {
    self.additionalServices = additionalServices
    self.corporate = corporate
    self.createdOn = createdOn
    self.deactivated = deactivated
    self.deactivatedAt = deactivatedAt
    self.deactivatedBy = deactivatedBy
    self.dealerLocationId = dealerLocationId
    self.`default` = `default`
    self.description = description
    self.id = id
    self.modifiedOn = modifiedOn
    self.name = name
    self.oemCode = oemCode
    self.period = period
    self.`private` = `private`
    self.ruleTags = ruleTags
    self.ruleType = ruleType
    self.vehicleStatus = vehicleStatus
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? VehicleDataCalculationRuleInfo else { return false }
    guard self.additionalServices == object.additionalServices else { return false }
    guard self.corporate == object.corporate else { return false }
    guard self.createdOn == object.createdOn else { return false }
    guard self.deactivated == object.deactivated else { return false }
    guard self.deactivatedAt == object.deactivatedAt else { return false }
    guard self.deactivatedBy == object.deactivatedBy else { return false }
    guard self.dealerLocationId == object.dealerLocationId else { return false }
    guard self.`default` == object.`default` else { return false }
    guard self.description == object.description else { return false }
    guard self.id == object.id else { return false }
    guard self.modifiedOn == object.modifiedOn else { return false }
    guard self.name == object.name else { return false }
    guard self.oemCode == object.oemCode else { return false }
    guard self.period == object.period else { return false }
    guard self.`private` == object.`private` else { return false }
    guard self.ruleTags == object.ruleTags else { return false }
    guard self.ruleType == object.ruleType else { return false }
    guard self.vehicleStatus == object.vehicleStatus else { return false }
    return true
  }

  public static func == (lhs: VehicleDataCalculationRuleInfo, rhs: VehicleDataCalculationRuleInfo) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
