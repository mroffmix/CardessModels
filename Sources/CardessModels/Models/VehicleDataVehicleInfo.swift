//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class VehicleDataVehicleInfo: Codable, Equatable {
  public typealias ID = String
  public var aboMatrixId: String?
  public var additionalServiceWarranty: VehicleDataAdditionalServiceInfo?
  public var additionalServiceWarrantyId: String?
  public var areWltpValuesFilled: Bool?
  public var availableFrom: Date?
  public var b2BPrice: Double?
  public var basePrice: Double?
  public var batteryCapacity: Double?
  public var batteryType: String?
  public var body: String?
  public var bookings: [VehicleDataVehicleBookingInfo]?
  public var campaignIds: [ID]?
  public var carLine: String?
  public var chassisCode: String?
  public var co2Wltp: Double?
  public var co2costMax: Double?
  public var co2costMid: Double?
  public var co2costMin: Double?
  public var co2efficiency: String?
  public var co2efficiencyCombined: String?
  public var co2emission: Double?
  public var co2emissionMax: String?
  public var co2emissionMin: String?
  public var co2maxPrice: Double?
  public var co2midPrice: Double?
  public var co2minPrice: Double?
  public var colorTitle: String?
  public var colour: MasterDataColourInfo?
  public var colourId: String?
  public var colours: [MasterDataColourInfo]?
  public var combinedPowerConsumption: Double?
  public var comment: String?
  public var countryVersion: String?
  public var createdOn: Date?
  public var currentBooking: VehicleDataVehicleBookingInfo?
  public var damaged: Bool?
  public var deactivated: Bool?
  public var deactivatedBy: String?
  public var deactivatedOn: Date?
  public var dealerRetailPrice: Double?
  public var defaultAboPrice: Double?
  public var defaultLeasingPrice: Double?
  public var defaultVarioPrice: Double?
  public var doors: Int?
  public var eCode: String?
  public var emissionClass: Int?
  public var emissionsSticker: VehicleDataEnumsEmissionsSticker?
  public var energyCost: Double?
  public var engineDesign: String?
  public var engineVolume: String?
  public var enhancedDescription: String?
  public var enhancedDescriptionHtml: String?
  public var envkv: Bool?
  public var expectedDeliveryDate: Date?
  public var exportCardessEngage: Bool?
  public var exportDealerWebSite: Bool?
  public var exportExternalStockManagement: Bool?
  public var exportFacebook: Bool?
  public var exportFacebookShop: Bool?
  public var exportMobiledeApi: Bool?
  public var exteriorColor: String?
  public var fuelConsumptionCityWltp: Double?
  public var fuelConsumptionCityWltpElectro: Double?
  public var fuelConsumptionCombined: Double?
  public var fuelConsumptionCombinedElectro: Double?
  public var fuelConsumptionCombinedHybridModeWltp: Double?
  public var fuelConsumptionCombinedWltp: Double?
  public var fuelConsumptionCombinedWltpElectro: Double?
  public var fuelConsumptionCountryRoadWltp: Double?
  public var fuelConsumptionCountryRoadWltpElectro: Double?
  public var fuelConsumptionHighway: Double?
  public var fuelConsumptionHighwayWltp: Double?
  public var fuelConsumptionHighwayWltpElectro: Double?
  public var fuelConsumptionShortDistanceWltp: Double?
  public var fuelConsumptionShortDistanceWltpElectro: Double?
  public var fuelConsumptionTown: Double?
  public var fuelPriceElectro: Double?
  public var fuelPriceMain: Double?
  public var fuelType: String?
  public var hsn: String?
  public var id: String?
  public var images: [String]?
  public var instaVidSpinCode: String?
  public var internalNumber: String?
  public var isBenzin: Bool?
  public var isDiesel: Bool?
  public var isElectro: Bool?
  public var isGas: Bool?
  public var isHybrid: Bool?
  public var isHydrogen: Bool?
  public var isMarketingHybrid: Bool?
  public var isPHEV: Bool?
  public var isPluginHybrid: Bool?
  public var lastBooking: VehicleDataVehicleBookingInfo?
  public var licensePlate: String?
  public var locationId: String?
  public var make: String?
  public var manufacturerCode: String?
  public var mass: Double?
  public var maxDiscount: Double?
  public var maximumMileage: Double?
  public var maximumMileageCityWltp: Double?
  public var maximumMileageWltp: Double?
  public var mileage: Int?
  public var model: String?
  public var modifiedOn: Date?
  public var noofCylinders: String?
  public var oemCode: String?
  public var onlinePrice: Double?
  public var options: [VehicleDataVehicleOptionInfo]?
  public var orderStatus: VehicleDataEnumsOrderStatus?
  public var packages: [VehicleDataOptionPackageInfo]?
  public var parentId: String?
  public var power: Double?
  public var powerHp: Double?
  public var previousOwners: Int?
  public var productionDate: Date?
  public var registrationDate: Date?
  public var rim: MasterDataRimInfo?
  public var rimId: String?
  public var rims: [MasterDataRimInfo]?
  public var salesPriceRRP: Double?
  public var salesStatus: VehicleDataEnumsSalesStatus?
  public var tags: [MasterDataTagInfo]?
  public var taxValue: Double?
  public var taxonomyCarline: MasterDataTaxonomyCarlineInfo?
  public var taxonomyCarlineId: String?
  public var taxonomyGeneration: MasterDataTaxonomyGenerationInfo?
  public var taxonomyGenerationId: String?
  public var taxonomyMake: MasterDataTaxonomyMakeInfo?
  public var taxonomyMakeId: String?
  public var taxonomyModel: MasterDataTaxonomyModelInfo?
  public var taxonomyModelId: String?
  public var taxonomyModelline: MasterDataTaxonomyModellineInfo?
  public var taxonomyModellineId: String?
  public var taxonomyMotorization: MasterDataTaxonomyMotorizationInfo?
  public var taxonomyMotorizationId: String?
  public var technicalTitle: String?
  public var title: String?
  public var transmission: String?
  public var trim: String?
  public var trimColor: String?
  public var tsn: String?
  public var turbo: String?
  public var upholsteries: [MasterDataUpholsteryInfo]?
  public var upholstery: MasterDataUpholsteryInfo?
  public var upholsteryId: String?
  public var usesNefzMileage: Bool?
  public var usesOnlyWltpMileage: Bool?
  public var usesWltpElectroMileage: Bool?
  public var usesWltpMileage: Bool?
  public var vatReclaimable: Bool?
  public var vehicleCategory: String?
  public var vehicleStatus: VehicleDataEnumsVehicleStatus?
  public var vehicles: [VehicleDataVehicleInfo]?
  public var vin: String?
  public var warnings: [VehicleDataWarningInfo]?
  public var warranty: Bool?

  public init(aboMatrixId: String? = nil, additionalServiceWarranty: VehicleDataAdditionalServiceInfo?  = nil, additionalServiceWarrantyId: String? = nil, areWltpValuesFilled: Bool?  = nil, availableFrom: Date? = nil, b2BPrice: Double?  = nil, basePrice: Double?  = nil, batteryCapacity: Double?  = nil, batteryType: String?  = nil, body: String?  = nil, bookings: [VehicleDataVehicleBookingInfo]?  = nil, campaignIds: [ID]?  = nil, carLine: String?  = nil, chassisCode: String?  = nil, co2Wltp: Double?  = nil, co2costMax: Double?  = nil, co2costMid: Double?  = nil, co2costMin: Double?  = nil, co2efficiency: String?  = nil, co2efficiencyCombined: String?  = nil, co2emission: Double?  = nil, co2emissionMax: String?  = nil, co2emissionMin: String?  = nil, co2maxPrice: Double?  = nil, co2midPrice: Double?  = nil, co2minPrice: Double?  = nil, colorTitle: String?  = nil, colour: MasterDataColourInfo?  = nil, colourId: String? = nil, colours: [MasterDataColourInfo]?  = nil, combinedPowerConsumption: Double?  = nil, comment: String?  = nil, countryVersion: String?  = nil, createdOn: Date? = nil, currentBooking: VehicleDataVehicleBookingInfo?  = nil, damaged: Bool?  = nil, deactivated: Bool?  = nil, deactivatedBy: String? = nil, deactivatedOn: Date? = nil, dealerRetailPrice: Double?  = nil, defaultAboPrice: Double?  = nil, defaultLeasingPrice: Double?  = nil, defaultVarioPrice: Double?  = nil, doors: Int?  = nil, eCode: String?  = nil, emissionClass: Int?  = nil, emissionsSticker: VehicleDataEnumsEmissionsSticker?  = nil, energyCost: Double?  = nil, engineDesign: String?  = nil, engineVolume: String?  = nil, enhancedDescription: String?  = nil, enhancedDescriptionHtml: String?  = nil, envkv: Bool?  = nil, expectedDeliveryDate: Date? = nil, exportCardessEngage: Bool?  = nil, exportDealerWebSite: Bool?  = nil, exportExternalStockManagement: Bool?  = nil, exportFacebook: Bool?  = nil, exportFacebookShop: Bool?  = nil, exportMobiledeApi: Bool?  = nil, exteriorColor: String?  = nil, fuelConsumptionCityWltp: Double?  = nil, fuelConsumptionCityWltpElectro: Double?  = nil, fuelConsumptionCombined: Double?  = nil, fuelConsumptionCombinedElectro: Double?  = nil, fuelConsumptionCombinedHybridModeWltp: Double?  = nil, fuelConsumptionCombinedWltp: Double?  = nil, fuelConsumptionCombinedWltpElectro: Double?  = nil, fuelConsumptionCountryRoadWltp: Double?  = nil, fuelConsumptionCountryRoadWltpElectro: Double?  = nil, fuelConsumptionHighway: Double?  = nil, fuelConsumptionHighwayWltp: Double?  = nil, fuelConsumptionHighwayWltpElectro: Double?  = nil, fuelConsumptionShortDistanceWltp: Double?  = nil, fuelConsumptionShortDistanceWltpElectro: Double?  = nil, fuelConsumptionTown: Double?  = nil, fuelPriceElectro: Double?  = nil, fuelPriceMain: Double?  = nil, fuelType: String?  = nil, hsn: String?  = nil, id: String? = nil, images: [String]?  = nil, instaVidSpinCode: String?  = nil, internalNumber: String?  = nil, isBenzin: Bool?  = nil, isDiesel: Bool?  = nil, isElectro: Bool?  = nil, isGas: Bool?  = nil, isHybrid: Bool?  = nil, isHydrogen: Bool?  = nil, isMarketingHybrid: Bool?  = nil, isPHEV: Bool?  = nil, isPluginHybrid: Bool?  = nil, lastBooking: VehicleDataVehicleBookingInfo?  = nil, licensePlate: String?  = nil, locationId: String?  = nil, make: String?  = nil, manufacturerCode: String?  = nil, mass: Double?  = nil, maxDiscount: Double?  = nil, maximumMileage: Double?  = nil, maximumMileageCityWltp: Double?  = nil, maximumMileageWltp: Double?  = nil, mileage: Int?  = nil, model: String?  = nil, modifiedOn: Date? = nil, noofCylinders: String?  = nil, oemCode: String?  = nil, onlinePrice: Double?  = nil, options: [VehicleDataVehicleOptionInfo]?  = nil, orderStatus: VehicleDataEnumsOrderStatus?  = nil, packages: [VehicleDataOptionPackageInfo]?  = nil, parentId: String? = nil, power: Double?  = nil, powerHp: Double?  = nil, previousOwners: Int?  = nil, productionDate: Date? = nil, registrationDate: Date? = nil, rim: MasterDataRimInfo?  = nil, rimId: String? = nil, rims: [MasterDataRimInfo]?  = nil, salesPriceRRP: Double?  = nil, salesStatus: VehicleDataEnumsSalesStatus?  = nil, tags: [MasterDataTagInfo]?  = nil, taxValue: Double?  = nil, taxonomyCarline: MasterDataTaxonomyCarlineInfo?  = nil, taxonomyCarlineId: String? = nil, taxonomyGeneration: MasterDataTaxonomyGenerationInfo?  = nil, taxonomyGenerationId: String? = nil, taxonomyMake: MasterDataTaxonomyMakeInfo?  = nil, taxonomyMakeId: String? = nil, taxonomyModel: MasterDataTaxonomyModelInfo?  = nil, taxonomyModelId: String? = nil, taxonomyModelline: MasterDataTaxonomyModellineInfo?  = nil, taxonomyModellineId: String? = nil, taxonomyMotorization: MasterDataTaxonomyMotorizationInfo?  = nil, taxonomyMotorizationId: String? = nil, technicalTitle: String?  = nil, title: String?  = nil, transmission: String?  = nil, trim: String?  = nil, trimColor: String?  = nil, tsn: String?  = nil, turbo: String?  = nil, upholsteries: [MasterDataUpholsteryInfo]?  = nil, upholstery: MasterDataUpholsteryInfo?  = nil, upholsteryId: String? = nil, usesNefzMileage: Bool?  = nil, usesOnlyWltpMileage: Bool?  = nil, usesWltpElectroMileage: Bool?  = nil, usesWltpMileage: Bool?  = nil, vatReclaimable: Bool?  = nil, vehicleCategory: String?  = nil, vehicleStatus: VehicleDataEnumsVehicleStatus?  = nil, vehicles: [VehicleDataVehicleInfo]?  = nil, vin: String?  = nil, warnings: [VehicleDataWarningInfo]?  = nil, warranty: Bool?  = nil) {
    self.aboMatrixId = aboMatrixId
    self.additionalServiceWarranty = additionalServiceWarranty
    self.additionalServiceWarrantyId = additionalServiceWarrantyId
    self.areWltpValuesFilled = areWltpValuesFilled
    self.availableFrom = availableFrom
    self.b2BPrice = b2BPrice
    self.basePrice = basePrice
    self.batteryCapacity = batteryCapacity
    self.batteryType = batteryType
    self.body = body
    self.bookings = bookings
    self.campaignIds = campaignIds
    self.carLine = carLine
    self.chassisCode = chassisCode
    self.co2Wltp = co2Wltp
    self.co2costMax = co2costMax
    self.co2costMid = co2costMid
    self.co2costMin = co2costMin
    self.co2efficiency = co2efficiency
    self.co2efficiencyCombined = co2efficiencyCombined
    self.co2emission = co2emission
    self.co2emissionMax = co2emissionMax
    self.co2emissionMin = co2emissionMin
    self.co2maxPrice = co2maxPrice
    self.co2midPrice = co2midPrice
    self.co2minPrice = co2minPrice
    self.colorTitle = colorTitle
    self.colour = colour
    self.colourId = colourId
    self.colours = colours
    self.combinedPowerConsumption = combinedPowerConsumption
    self.comment = comment
    self.countryVersion = countryVersion
    self.createdOn = createdOn
    self.currentBooking = currentBooking
    self.damaged = damaged
    self.deactivated = deactivated
    self.deactivatedBy = deactivatedBy
    self.deactivatedOn = deactivatedOn
    self.dealerRetailPrice = dealerRetailPrice
    self.defaultAboPrice = defaultAboPrice
    self.defaultLeasingPrice = defaultLeasingPrice
    self.defaultVarioPrice = defaultVarioPrice
    self.doors = doors
    self.eCode = eCode
    self.emissionClass = emissionClass
    self.emissionsSticker = emissionsSticker
    self.energyCost = energyCost
    self.engineDesign = engineDesign
    self.engineVolume = engineVolume
    self.enhancedDescription = enhancedDescription
    self.enhancedDescriptionHtml = enhancedDescriptionHtml
    self.envkv = envkv
    self.expectedDeliveryDate = expectedDeliveryDate
    self.exportCardessEngage = exportCardessEngage
    self.exportDealerWebSite = exportDealerWebSite
    self.exportExternalStockManagement = exportExternalStockManagement
    self.exportFacebook = exportFacebook
    self.exportFacebookShop = exportFacebookShop
    self.exportMobiledeApi = exportMobiledeApi
    self.exteriorColor = exteriorColor
    self.fuelConsumptionCityWltp = fuelConsumptionCityWltp
    self.fuelConsumptionCityWltpElectro = fuelConsumptionCityWltpElectro
    self.fuelConsumptionCombined = fuelConsumptionCombined
    self.fuelConsumptionCombinedElectro = fuelConsumptionCombinedElectro
    self.fuelConsumptionCombinedHybridModeWltp = fuelConsumptionCombinedHybridModeWltp
    self.fuelConsumptionCombinedWltp = fuelConsumptionCombinedWltp
    self.fuelConsumptionCombinedWltpElectro = fuelConsumptionCombinedWltpElectro
    self.fuelConsumptionCountryRoadWltp = fuelConsumptionCountryRoadWltp
    self.fuelConsumptionCountryRoadWltpElectro = fuelConsumptionCountryRoadWltpElectro
    self.fuelConsumptionHighway = fuelConsumptionHighway
    self.fuelConsumptionHighwayWltp = fuelConsumptionHighwayWltp
    self.fuelConsumptionHighwayWltpElectro = fuelConsumptionHighwayWltpElectro
    self.fuelConsumptionShortDistanceWltp = fuelConsumptionShortDistanceWltp
    self.fuelConsumptionShortDistanceWltpElectro = fuelConsumptionShortDistanceWltpElectro
    self.fuelConsumptionTown = fuelConsumptionTown
    self.fuelPriceElectro = fuelPriceElectro
    self.fuelPriceMain = fuelPriceMain
    self.fuelType = fuelType
    self.hsn = hsn
    self.id = id
    self.images = images
    self.instaVidSpinCode = instaVidSpinCode
    self.internalNumber = internalNumber
    self.isBenzin = isBenzin
    self.isDiesel = isDiesel
    self.isElectro = isElectro
    self.isGas = isGas
    self.isHybrid = isHybrid
    self.isHydrogen = isHydrogen
    self.isMarketingHybrid = isMarketingHybrid
    self.isPHEV = isPHEV
    self.isPluginHybrid = isPluginHybrid
    self.lastBooking = lastBooking
    self.licensePlate = licensePlate
    self.locationId = locationId
    self.make = make
    self.manufacturerCode = manufacturerCode
    self.mass = mass
    self.maxDiscount = maxDiscount
    self.maximumMileage = maximumMileage
    self.maximumMileageCityWltp = maximumMileageCityWltp
    self.maximumMileageWltp = maximumMileageWltp
    self.mileage = mileage
    self.model = model
    self.modifiedOn = modifiedOn
    self.noofCylinders = noofCylinders
    self.oemCode = oemCode
    self.onlinePrice = onlinePrice
    self.options = options
    self.orderStatus = orderStatus
    self.packages = packages
    self.parentId = parentId
    self.power = power
    self.powerHp = powerHp
    self.previousOwners = previousOwners
    self.productionDate = productionDate
    self.registrationDate = registrationDate
    self.rim = rim
    self.rimId = rimId
    self.rims = rims
    self.salesPriceRRP = salesPriceRRP
    self.salesStatus = salesStatus
    self.tags = tags
    self.taxValue = taxValue
    self.taxonomyCarline = taxonomyCarline
    self.taxonomyCarlineId = taxonomyCarlineId
    self.taxonomyGeneration = taxonomyGeneration
    self.taxonomyGenerationId = taxonomyGenerationId
    self.taxonomyMake = taxonomyMake
    self.taxonomyMakeId = taxonomyMakeId
    self.taxonomyModel = taxonomyModel
    self.taxonomyModelId = taxonomyModelId
    self.taxonomyModelline = taxonomyModelline
    self.taxonomyModellineId = taxonomyModellineId
    self.taxonomyMotorization = taxonomyMotorization
    self.taxonomyMotorizationId = taxonomyMotorizationId
    self.technicalTitle = technicalTitle
    self.title = title
    self.transmission = transmission
    self.trim = trim
    self.trimColor = trimColor
    self.tsn = tsn
    self.turbo = turbo
    self.upholsteries = upholsteries
    self.upholstery = upholstery
    self.upholsteryId = upholsteryId
    self.usesNefzMileage = usesNefzMileage
    self.usesOnlyWltpMileage = usesOnlyWltpMileage
    self.usesWltpElectroMileage = usesWltpElectroMileage
    self.usesWltpMileage = usesWltpMileage
    self.vatReclaimable = vatReclaimable
    self.vehicleCategory = vehicleCategory
    self.vehicleStatus = vehicleStatus
    self.vehicles = vehicles
    self.vin = vin
    self.warnings = warnings
    self.warranty = warranty
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? VehicleDataVehicleInfo else { return false }
    guard self.aboMatrixId == object.aboMatrixId else { return false }
    guard self.additionalServiceWarranty == object.additionalServiceWarranty else { return false }
    guard self.additionalServiceWarrantyId == object.additionalServiceWarrantyId else { return false }
    guard self.areWltpValuesFilled == object.areWltpValuesFilled else { return false }
    guard self.availableFrom == object.availableFrom else { return false }
    guard self.b2BPrice == object.b2BPrice else { return false }
    guard self.basePrice == object.basePrice else { return false }
    guard self.batteryCapacity == object.batteryCapacity else { return false }
    guard self.batteryType == object.batteryType else { return false }
    guard self.body == object.body else { return false }
    guard self.bookings == object.bookings else { return false }
    guard self.campaignIds == object.campaignIds else { return false }
    guard self.carLine == object.carLine else { return false }
    guard self.chassisCode == object.chassisCode else { return false }
    guard self.co2Wltp == object.co2Wltp else { return false }
    guard self.co2costMax == object.co2costMax else { return false }
    guard self.co2costMid == object.co2costMid else { return false }
    guard self.co2costMin == object.co2costMin else { return false }
    guard self.co2efficiency == object.co2efficiency else { return false }
    guard self.co2efficiencyCombined == object.co2efficiencyCombined else { return false }
    guard self.co2emission == object.co2emission else { return false }
    guard self.co2emissionMax == object.co2emissionMax else { return false }
    guard self.co2emissionMin == object.co2emissionMin else { return false }
    guard self.co2maxPrice == object.co2maxPrice else { return false }
    guard self.co2midPrice == object.co2midPrice else { return false }
    guard self.co2minPrice == object.co2minPrice else { return false }
    guard self.colorTitle == object.colorTitle else { return false }
    guard self.colour == object.colour else { return false }
    guard self.colourId == object.colourId else { return false }
    guard self.colours == object.colours else { return false }
    guard self.combinedPowerConsumption == object.combinedPowerConsumption else { return false }
    guard self.comment == object.comment else { return false }
    guard self.countryVersion == object.countryVersion else { return false }
    guard self.createdOn == object.createdOn else { return false }
    guard self.currentBooking == object.currentBooking else { return false }
    guard self.damaged == object.damaged else { return false }
    guard self.deactivated == object.deactivated else { return false }
    guard self.deactivatedBy == object.deactivatedBy else { return false }
    guard self.deactivatedOn == object.deactivatedOn else { return false }
    guard self.dealerRetailPrice == object.dealerRetailPrice else { return false }
    guard self.defaultAboPrice == object.defaultAboPrice else { return false }
    guard self.defaultLeasingPrice == object.defaultLeasingPrice else { return false }
    guard self.defaultVarioPrice == object.defaultVarioPrice else { return false }
    guard self.doors == object.doors else { return false }
    guard self.eCode == object.eCode else { return false }
    guard self.emissionClass == object.emissionClass else { return false }
    guard self.emissionsSticker == object.emissionsSticker else { return false }
    guard self.energyCost == object.energyCost else { return false }
    guard self.engineDesign == object.engineDesign else { return false }
    guard self.engineVolume == object.engineVolume else { return false }
    guard self.enhancedDescription == object.enhancedDescription else { return false }
    guard self.enhancedDescriptionHtml == object.enhancedDescriptionHtml else { return false }
    guard self.envkv == object.envkv else { return false }
    guard self.expectedDeliveryDate == object.expectedDeliveryDate else { return false }
    guard self.exportCardessEngage == object.exportCardessEngage else { return false }
    guard self.exportDealerWebSite == object.exportDealerWebSite else { return false }
    guard self.exportExternalStockManagement == object.exportExternalStockManagement else { return false }
    guard self.exportFacebook == object.exportFacebook else { return false }
    guard self.exportFacebookShop == object.exportFacebookShop else { return false }
    guard self.exportMobiledeApi == object.exportMobiledeApi else { return false }
    guard self.exteriorColor == object.exteriorColor else { return false }
    guard self.fuelConsumptionCityWltp == object.fuelConsumptionCityWltp else { return false }
    guard self.fuelConsumptionCityWltpElectro == object.fuelConsumptionCityWltpElectro else { return false }
    guard self.fuelConsumptionCombined == object.fuelConsumptionCombined else { return false }
    guard self.fuelConsumptionCombinedElectro == object.fuelConsumptionCombinedElectro else { return false }
    guard self.fuelConsumptionCombinedHybridModeWltp == object.fuelConsumptionCombinedHybridModeWltp else { return false }
    guard self.fuelConsumptionCombinedWltp == object.fuelConsumptionCombinedWltp else { return false }
    guard self.fuelConsumptionCombinedWltpElectro == object.fuelConsumptionCombinedWltpElectro else { return false }
    guard self.fuelConsumptionCountryRoadWltp == object.fuelConsumptionCountryRoadWltp else { return false }
    guard self.fuelConsumptionCountryRoadWltpElectro == object.fuelConsumptionCountryRoadWltpElectro else { return false }
    guard self.fuelConsumptionHighway == object.fuelConsumptionHighway else { return false }
    guard self.fuelConsumptionHighwayWltp == object.fuelConsumptionHighwayWltp else { return false }
    guard self.fuelConsumptionHighwayWltpElectro == object.fuelConsumptionHighwayWltpElectro else { return false }
    guard self.fuelConsumptionShortDistanceWltp == object.fuelConsumptionShortDistanceWltp else { return false }
    guard self.fuelConsumptionShortDistanceWltpElectro == object.fuelConsumptionShortDistanceWltpElectro else { return false }
    guard self.fuelConsumptionTown == object.fuelConsumptionTown else { return false }
    guard self.fuelPriceElectro == object.fuelPriceElectro else { return false }
    guard self.fuelPriceMain == object.fuelPriceMain else { return false }
    guard self.fuelType == object.fuelType else { return false }
    guard self.hsn == object.hsn else { return false }
    guard self.id == object.id else { return false }
    guard self.images == object.images else { return false }
    guard self.instaVidSpinCode == object.instaVidSpinCode else { return false }
    guard self.internalNumber == object.internalNumber else { return false }
    guard self.isBenzin == object.isBenzin else { return false }
    guard self.isDiesel == object.isDiesel else { return false }
    guard self.isElectro == object.isElectro else { return false }
    guard self.isGas == object.isGas else { return false }
    guard self.isHybrid == object.isHybrid else { return false }
    guard self.isHydrogen == object.isHydrogen else { return false }
    guard self.isMarketingHybrid == object.isMarketingHybrid else { return false }
    guard self.isPHEV == object.isPHEV else { return false }
    guard self.isPluginHybrid == object.isPluginHybrid else { return false }
    guard self.lastBooking == object.lastBooking else { return false }
    guard self.licensePlate == object.licensePlate else { return false }
    guard self.locationId == object.locationId else { return false }
    guard self.make == object.make else { return false }
    guard self.manufacturerCode == object.manufacturerCode else { return false }
    guard self.mass == object.mass else { return false }
    guard self.maxDiscount == object.maxDiscount else { return false }
    guard self.maximumMileage == object.maximumMileage else { return false }
    guard self.maximumMileageCityWltp == object.maximumMileageCityWltp else { return false }
    guard self.maximumMileageWltp == object.maximumMileageWltp else { return false }
    guard self.mileage == object.mileage else { return false }
    guard self.model == object.model else { return false }
    guard self.modifiedOn == object.modifiedOn else { return false }
    guard self.noofCylinders == object.noofCylinders else { return false }
    guard self.oemCode == object.oemCode else { return false }
    guard self.onlinePrice == object.onlinePrice else { return false }
    guard self.options == object.options else { return false }
    guard self.orderStatus == object.orderStatus else { return false }
    guard self.packages == object.packages else { return false }
    guard self.parentId == object.parentId else { return false }
    guard self.power == object.power else { return false }
    guard self.powerHp == object.powerHp else { return false }
    guard self.previousOwners == object.previousOwners else { return false }
    guard self.productionDate == object.productionDate else { return false }
    guard self.registrationDate == object.registrationDate else { return false }
    guard self.rim == object.rim else { return false }
    guard self.rimId == object.rimId else { return false }
    guard self.rims == object.rims else { return false }
    guard self.salesPriceRRP == object.salesPriceRRP else { return false }
    guard self.salesStatus == object.salesStatus else { return false }
    guard self.tags == object.tags else { return false }
    guard self.taxValue == object.taxValue else { return false }
    guard self.taxonomyCarline == object.taxonomyCarline else { return false }
    guard self.taxonomyCarlineId == object.taxonomyCarlineId else { return false }
    guard self.taxonomyGeneration == object.taxonomyGeneration else { return false }
    guard self.taxonomyGenerationId == object.taxonomyGenerationId else { return false }
    guard self.taxonomyMake == object.taxonomyMake else { return false }
    guard self.taxonomyMakeId == object.taxonomyMakeId else { return false }
    guard self.taxonomyModel == object.taxonomyModel else { return false }
    guard self.taxonomyModelId == object.taxonomyModelId else { return false }
    guard self.taxonomyModelline == object.taxonomyModelline else { return false }
    guard self.taxonomyModellineId == object.taxonomyModellineId else { return false }
    guard self.taxonomyMotorization == object.taxonomyMotorization else { return false }
    guard self.taxonomyMotorizationId == object.taxonomyMotorizationId else { return false }
    guard self.technicalTitle == object.technicalTitle else { return false }
    guard self.title == object.title else { return false }
    guard self.transmission == object.transmission else { return false }
    guard self.trim == object.trim else { return false }
    guard self.trimColor == object.trimColor else { return false }
    guard self.tsn == object.tsn else { return false }
    guard self.turbo == object.turbo else { return false }
    guard self.upholsteries == object.upholsteries else { return false }
    guard self.upholstery == object.upholstery else { return false }
    guard self.upholsteryId == object.upholsteryId else { return false }
    guard self.usesNefzMileage == object.usesNefzMileage else { return false }
    guard self.usesOnlyWltpMileage == object.usesOnlyWltpMileage else { return false }
    guard self.usesWltpElectroMileage == object.usesWltpElectroMileage else { return false }
    guard self.usesWltpMileage == object.usesWltpMileage else { return false }
    guard self.vatReclaimable == object.vatReclaimable else { return false }
    guard self.vehicleCategory == object.vehicleCategory else { return false }
    guard self.vehicleStatus == object.vehicleStatus else { return false }
    guard self.vehicles == object.vehicles else { return false }
    guard self.vin == object.vin else { return false }
    guard self.warnings == object.warnings else { return false }
    guard self.warranty == object.warranty else { return false }
    return true
  }

  public static func == (lhs: VehicleDataVehicleInfo, rhs: VehicleDataVehicleInfo) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
