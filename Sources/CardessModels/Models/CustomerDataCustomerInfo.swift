//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class CustomerDataCustomerInfo: Codable, Equatable {
  public var allowEmail: Bool?
  public var allowMessaging: Bool?
  public var allowPhone: Bool?
  public var allowSms: Bool?
  public var assignedToId: String?
  public var city: String?
  public var companyName: String?
  public var country: String?
  public var crmExternalCustomerID: String?
  public var currentVehicles: [CustomerDataCustomerCurrentVehicleInfo]?
  public var email: String?
  public var extId: String?
  public var externalCustomerID: String?
  public var externalUrl: String?
  public var firstName: String?
  public var houseNr: String?
  public var id: String?
  public var importSource: CustomerDataEnumsImportCustomerSource?
  public var lastName: String?
  public var phoneNo: String?
  public var phoneNoSecondary: String?
  public var points: Int?
  public var potentialVehicles: [CustomerDataCustomerPotentialVehicleInfo]?
  public var salutation: String?
  public var street: String?
  public var title: String?
  public var website: String?
  public var zipCode: String?

  public init(allowEmail: Bool?  = nil, allowMessaging: Bool?  = nil, allowPhone: Bool?  = nil, allowSms: Bool?  = nil, assignedToId: String?  = nil, city: String?  = nil, companyName: String?  = nil, country: String?  = nil, crmExternalCustomerID: String?  = nil, currentVehicles: [CustomerDataCustomerCurrentVehicleInfo]?  = nil, email: String?  = nil, extId: String?  = nil, externalCustomerID: String?  = nil, externalUrl: String?  = nil, firstName: String?  = nil, houseNr: String?  = nil, id: String? = nil, importSource: CustomerDataEnumsImportCustomerSource?  = nil, lastName: String?  = nil, phoneNo: String?  = nil, phoneNoSecondary: String?  = nil, points: Int?  = nil, potentialVehicles: [CustomerDataCustomerPotentialVehicleInfo]?  = nil, salutation: String?  = nil, street: String?  = nil, title: String?  = nil, website: String?  = nil, zipCode: String?  = nil) {
    self.allowEmail = allowEmail
    self.allowMessaging = allowMessaging
    self.allowPhone = allowPhone
    self.allowSms = allowSms
    self.assignedToId = assignedToId
    self.city = city
    self.companyName = companyName
    self.country = country
    self.crmExternalCustomerID = crmExternalCustomerID
    self.currentVehicles = currentVehicles
    self.email = email
    self.extId = extId
    self.externalCustomerID = externalCustomerID
    self.externalUrl = externalUrl
    self.firstName = firstName
    self.houseNr = houseNr
    self.id = id
    self.importSource = importSource
    self.lastName = lastName
    self.phoneNo = phoneNo
    self.phoneNoSecondary = phoneNoSecondary
    self.points = points
    self.potentialVehicles = potentialVehicles
    self.salutation = salutation
    self.street = street
    self.title = title
    self.website = website
    self.zipCode = zipCode
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? CustomerDataCustomerInfo else { return false }
    guard self.allowEmail == object.allowEmail else { return false }
    guard self.allowMessaging == object.allowMessaging else { return false }
    guard self.allowPhone == object.allowPhone else { return false }
    guard self.allowSms == object.allowSms else { return false }
    guard self.assignedToId == object.assignedToId else { return false }
    guard self.city == object.city else { return false }
    guard self.companyName == object.companyName else { return false }
    guard self.country == object.country else { return false }
    guard self.crmExternalCustomerID == object.crmExternalCustomerID else { return false }
    guard self.currentVehicles == object.currentVehicles else { return false }
    guard self.email == object.email else { return false }
    guard self.extId == object.extId else { return false }
    guard self.externalCustomerID == object.externalCustomerID else { return false }
    guard self.externalUrl == object.externalUrl else { return false }
    guard self.firstName == object.firstName else { return false }
    guard self.houseNr == object.houseNr else { return false }
    guard self.id == object.id else { return false }
    guard self.importSource == object.importSource else { return false }
    guard self.lastName == object.lastName else { return false }
    guard self.phoneNo == object.phoneNo else { return false }
    guard self.phoneNoSecondary == object.phoneNoSecondary else { return false }
    guard self.points == object.points else { return false }
    guard self.potentialVehicles == object.potentialVehicles else { return false }
    guard self.salutation == object.salutation else { return false }
    guard self.street == object.street else { return false }
    guard self.title == object.title else { return false }
    guard self.website == object.website else { return false }
    guard self.zipCode == object.zipCode else { return false }
    return true
  }

  public static func == (lhs: CustomerDataCustomerInfo, rhs: CustomerDataCustomerInfo) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
