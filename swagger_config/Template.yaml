formatter: swift
options:
  name: API # the name of the API
  fixedWidthIntegers: false # whether to use types like Int32 and Int64
  mutableModels: true # whether model properties are mutable
  safeOptionalDecoding: false # set invalid optionals to nil instead of throwing
  safeArrayDecoding: false # filter out invalid items in array instead of throwing
  modelPrefix: null # applied to model classes and enums
  modelSuffix: null # applied to model classes
  modelType: class # can be struct or class
  modelInheritance: true # must be false for struct modelType
  modelProtocol: Codable, Equatable # the protocol all models conform to
  copiedFiles:
    - CommunicationVehicleTaxonomyValues
    - CommunicationTaxonomyValue
    - VehicleDataHyundaiHyundaiTrimMotors
    - VehicleDataHyundaiHyundayEquipmentItemsSubCategories
    - VehicleDataHyundaiHyundaiMotor
  modelNames:
  enumNames:
  enumUndecodableCase: false # whether to add undecodable case to enums
  codableResponses: true # constrains all responses/model to be Codable
  propertyNames: {} # override property names
  anyType: Any # override Any in generated models
  numberType: Double # number type without format
  typeAliases:
    ID: String
    SystemTimeSpan: String
    DateTime: Date
    Any: T
    CommunicationTaxonomyValue: CommunicationTaxonomyValue<T>
  dependencies:
    - name: Alamofire
      pod: Alamofire
      github: Alamofire/Alamofire
      version: 5.4.4
templateFiles:
  - path: Sources/Enum.swift
    context: enums
    destination: "Enums/{{ enumName }}.swift"
  - path: Sources/Model.swift
    context: schemas
    destination: "Models/{{ type }}.swift"
  - path: README.md
