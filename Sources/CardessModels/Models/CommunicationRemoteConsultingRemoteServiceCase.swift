//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class CommunicationRemoteConsultingRemoteServiceCase: Codable, Equatable {
  public var callInfo: CommunicationRemoteConsultingCallInfo?
  public var carCheckId: String?
  public var createdAt: Date?
  public var customer: CommunicationRemoteConsultingCustomer?
  public var customerSelectedVehicle: CommunicationRemoteConsultingCustomerSelectedVehicle?
  public var engageOverview: CommunicationRemoteConsultingEngageOverview?
  public var externalId: String?
  public var images: [String]?
  public var processType: CommunicationRemoteConsultingProcessType?
  public var questionnaireIssues: [CommunicationRemoteConsultingQuestionnaireIssue]?
  public var rscConsumerUrl: String?
  public var state: CommunicationRemoteConsultingRemoteServiceCaseState?
  public var vehicle: CommunicationRemoteConsultingVehicleOverview?
  public var vehicleIdentificationNote: String?

  public init(callInfo: CommunicationRemoteConsultingCallInfo?  = nil, carCheckId: String?  = nil, createdAt: Date? = nil, customer: CommunicationRemoteConsultingCustomer?  = nil, customerSelectedVehicle: CommunicationRemoteConsultingCustomerSelectedVehicle?  = nil, engageOverview: CommunicationRemoteConsultingEngageOverview?  = nil, externalId: String?  = nil, images: [String]?  = nil, processType: CommunicationRemoteConsultingProcessType?  = nil, questionnaireIssues: [CommunicationRemoteConsultingQuestionnaireIssue]?  = nil, rscConsumerUrl: String?  = nil, state: CommunicationRemoteConsultingRemoteServiceCaseState?  = nil, vehicle: CommunicationRemoteConsultingVehicleOverview?  = nil, vehicleIdentificationNote: String?  = nil) {
    self.callInfo = callInfo
    self.carCheckId = carCheckId
    self.createdAt = createdAt
    self.customer = customer
    self.customerSelectedVehicle = customerSelectedVehicle
    self.engageOverview = engageOverview
    self.externalId = externalId
    self.images = images
    self.processType = processType
    self.questionnaireIssues = questionnaireIssues
    self.rscConsumerUrl = rscConsumerUrl
    self.state = state
    self.vehicle = vehicle
    self.vehicleIdentificationNote = vehicleIdentificationNote
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? CommunicationRemoteConsultingRemoteServiceCase else { return false }
    guard self.callInfo == object.callInfo else { return false }
    guard self.carCheckId == object.carCheckId else { return false }
    guard self.createdAt == object.createdAt else { return false }
    guard self.customer == object.customer else { return false }
    guard self.customerSelectedVehicle == object.customerSelectedVehicle else { return false }
    guard self.engageOverview == object.engageOverview else { return false }
    guard self.externalId == object.externalId else { return false }
    guard self.images == object.images else { return false }
    guard self.processType == object.processType else { return false }
    guard self.questionnaireIssues == object.questionnaireIssues else { return false }
    guard self.rscConsumerUrl == object.rscConsumerUrl else { return false }
    guard self.state == object.state else { return false }
    guard self.vehicle == object.vehicle else { return false }
    guard self.vehicleIdentificationNote == object.vehicleIdentificationNote else { return false }
    return true
  }

  public static func == (lhs: CommunicationRemoteConsultingRemoteServiceCase, rhs: CommunicationRemoteConsultingRemoteServiceCase) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
