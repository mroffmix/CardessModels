//
// Generated for Cardess.SELL
// https://github.com/yonaskolb/SwagGen
//  
//  Generated by Ilya Mikhailov
//  Copyright Â© 2022 MCon Germany GmbH. All rights reserved.

import Foundation



public class CustomerDataCustomerPotentialVehicleInfo: Codable, Equatable {
  public var carline: String?
  public var ccvId: Int?
  public var color: String?
  public var container: String?
  public var createdOn: Date?
  public var cubicCapacity: Int?
  public var cylinderCount: Int?
  public var ecode: String?
  public var fuelType: String?
  public var fza: String?
  public var hotlistRanking: Int?
  public var hst: String?
  public var ht: String?
  public var interiorColor: String?
  public var model: String?
  public var modelYear: String?
  public var modifiedOn: Date?
  public var specialEdition: String?
  public var transmission: String?
  public var ut: String?
  public var vehicleBrand: String?
  public var vin: String?

  public init(carline: String?  = nil, ccvId: Int?  = nil, color: String?  = nil, container: String?  = nil, createdOn: Date? = nil, cubicCapacity: Int?  = nil, cylinderCount: Int?  = nil, ecode: String?  = nil, fuelType: String?  = nil, fza: String?  = nil, hotlistRanking: Int?  = nil, hst: String?  = nil, ht: String?  = nil, interiorColor: String?  = nil, model: String?  = nil, modelYear: String?  = nil, modifiedOn: Date? = nil, specialEdition: String?  = nil, transmission: String?  = nil, ut: String?  = nil, vehicleBrand: String?  = nil, vin: String?  = nil) {
    self.carline = carline
    self.ccvId = ccvId
    self.color = color
    self.container = container
    self.createdOn = createdOn
    self.cubicCapacity = cubicCapacity
    self.cylinderCount = cylinderCount
    self.ecode = ecode
    self.fuelType = fuelType
    self.fza = fza
    self.hotlistRanking = hotlistRanking
    self.hst = hst
    self.ht = ht
    self.interiorColor = interiorColor
    self.model = model
    self.modelYear = modelYear
    self.modifiedOn = modifiedOn
    self.specialEdition = specialEdition
    self.transmission = transmission
    self.ut = ut
    self.vehicleBrand = vehicleBrand
    self.vin = vin
  }


  public func isEqual(to object: Any?) -> Bool {
    guard let object = object as? CustomerDataCustomerPotentialVehicleInfo else { return false }
    guard self.carline == object.carline else { return false }
    guard self.ccvId == object.ccvId else { return false }
    guard self.color == object.color else { return false }
    guard self.container == object.container else { return false }
    guard self.createdOn == object.createdOn else { return false }
    guard self.cubicCapacity == object.cubicCapacity else { return false }
    guard self.cylinderCount == object.cylinderCount else { return false }
    guard self.ecode == object.ecode else { return false }
    guard self.fuelType == object.fuelType else { return false }
    guard self.fza == object.fza else { return false }
    guard self.hotlistRanking == object.hotlistRanking else { return false }
    guard self.hst == object.hst else { return false }
    guard self.ht == object.ht else { return false }
    guard self.interiorColor == object.interiorColor else { return false }
    guard self.model == object.model else { return false }
    guard self.modelYear == object.modelYear else { return false }
    guard self.modifiedOn == object.modifiedOn else { return false }
    guard self.specialEdition == object.specialEdition else { return false }
    guard self.transmission == object.transmission else { return false }
    guard self.ut == object.ut else { return false }
    guard self.vehicleBrand == object.vehicleBrand else { return false }
    guard self.vin == object.vin else { return false }
    return true
  }

  public static func == (lhs: CustomerDataCustomerPotentialVehicleInfo, rhs: CustomerDataCustomerPotentialVehicleInfo) -> Bool {
    return lhs.isEqual(to: rhs)
  }
}
